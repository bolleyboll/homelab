---
crds:
  enabled: true

alertmanager:
  ingress:
    enabled: true
    ingressClassName: "nginx"
    hosts:
      - alertmanager.lan

grafana:
  ingress:
    enabled: true
    ingressClassName: "nginx"
    hosts:
      - grafana.lan
  grafana.ini:
    security:
      cookie_secure: false
    server:
      domain: grafana.lan
      protocol: http
      root_url: "http://grafana.lan"
  additionalDataSources:
    - name: InfluxDB
      type: influxdb
      access: proxy
      url: http://192.168.2.101:8181
      database: candles
      isDefault: false

kubeProxy:
  enabled: false

nodeExporter:
  enabled: false

prometheus:
  prometheusSpec:
    retention: 7d
    serviceMonitorSelectorNilUsesHelmValues: false
    additionalScrapeConfigs:
      - job_name: "dockerswarm"
        dockerswarm_sd_configs:
          - host: "tcp://192.168.2.101:2375"
            role: nodes
        relabel_configs:
          # Fetch metrics on port 9323.
          - source_labels: [__meta_dockerswarm_node_address]
            target_label: __address__
            replacement: $1:9323
          # Set hostname as instance label
          - source_labels: [__meta_dockerswarm_node_hostname]
            target_label: instance
      - job_name: "swarm-jobs"
        fallback_scrape_protocol: PrometheusText0.0.4
        dockerswarm_sd_configs:
          - host: "tcp://192.168.2.101:2375"
            role: tasks
        relabel_configs:
          # Only keep containers that should be running.
          - source_labels: [__meta_dockerswarm_task_desired_state]
            regex: running
            action: keep
          # Only keep containers that have a `prometheus-job` label.
          - source_labels: [__meta_dockerswarm_service_label_prometheus_job]
            regex: .+
            action: keep
          # Use the prometheus-job Swarm label as Prometheus job label.
          - source_labels: [__meta_dockerswarm_service_label_prometheus_job]
            target_label: job
          # Fetch metrics on port 9100.
          - source_labels:
              - __meta_dockerswarm_node_address
              - __meta_dockerswarm_service_label_prometheus_port
            target_label: __address__
            separator: ":"
            replacement: $1
            action: replace
          - source_labels: [__meta_dockerswarm_node_hostname]
            target_label: instance
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi

  ingress:
    enabled: true
    ingressClassName: "nginx"
    hosts:
      - prometheus.lan
